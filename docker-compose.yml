# version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      # migrate:
      #   condition: service_completed_successfully
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_USER: youruser
      DB_PASSWORD: yourpassword
      DB_NAME: yourdb
      DB_PORT: 5432
      TZ: Europe/Moscow # Установка временной зоны
    restart: unless-stopped
    volumes:
      - .:/app
      - /app/node_modules
      - /app/dist
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: youruser
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: yourdb
      TZ: Europe/Moscow
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/backups:/backups # Для бэкапов (если нужно)
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U youruser -d yourdb"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run migrate
    environment:
      DB_HOST: postgres
      DB_USER: youruser
      DB_PASSWORD: yourpassword
      DB_NAME: yourdb
    restart: on-failure
    networks:
      - app-network

  # Раскомментируйте если нужен pgAdmin
  # pgadmin:
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@example.com
  #     PGADMIN_DEFAULT_PASSWORD: secret
  #   ports:
  #     - "5050:80"
  #   depends_on:
  #     - postgres
  #   networks:
  #     - app-network

volumes:
  postgres-data:
    driver: local

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
