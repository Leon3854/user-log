# version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file: .env # Основной файл переменных
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-development} # Берем из .env или значение по умолчанию
      DB_HOST: ${POSTGRES_HOST}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      DB_PORT: ${POSTGRES_PORT:-5432}
      JWT_SECRET: ${JWT_SECRET}
      TZ: ${TZ:-Europe/Moscow}
    restart: unless-stopped
    volumes:
      - .:/app
      - /app/node_modules
      - /app/dist
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  postgres:
    image: postgres:16
    env_file: .env # Используем те же переменные
    environment:
      POSTGRES_USER: ${POSTGRES_USER} # -> "postgres"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # -> "123456"
      POSTGRES_DB: ${POSTGRES_DB} # Берётся из .env -> "user-log"
      POSTGRES_HOST: ${POSTGRES_HOST}
      TZ: ${TZ:-Europe/Moscow}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/backups:/backups
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-user-log}",
        ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env # Те же переменные для миграций
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "npm run migrate && npm run seed"
    environment:
      DB_HOST: ${POSTGRES_HOST}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
    restart: on-failure
    volumes:
      - .:/app
      - /app/node_modules
      - ./src/database/migrations:/app/database/migrations
      - ./src/database/seeds:/app/database/seeds
    networks:
      - app-network

volumes:
  postgres-data:
    driver: local

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
